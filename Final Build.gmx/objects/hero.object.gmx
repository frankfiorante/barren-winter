<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>walk_forward_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement variable creation
left_key=ord("A")
right_key=ord("D")
up_key=ord("W")
down_key=ord("S")
walkspeed=3

//dmg sound
canplay=true

//whip snare
snared=false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///footprint creation
instance_create(x+4,y+28,footprint_side)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///footprint creation
instance_create(x+4,y+28,footprint_up)
instance_create(x-4,y+22,footprint_up)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canplay=true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///hooked = false
hooked=false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Personal Light
if candraw==1 &amp;&amp; ilumi==true
{
size = 256+(irandom(3));
draw_set_blend_mode(bm_subtract)
surface_set_target(light);
draw_ellipse_color(x-size/2-view_xview,y-size/2-view_yview,x+size/2-view_xview,y+size/2-view_yview,c_orange,c_black,false)

surface_reset_target()
draw_set_blend_mode(bm_normal)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Extra variables
if death==true
{
exit
}
//Hook
if hooked==true &amp;&amp; instance_exists(hooky)
{
move_towards_point(hooky.x,hooky.y,24)
}
if instance_number(whip)==1
{
    snared=true
}
else
{
    snared=false
}

//Facing direction
if sprite_index==walk_forward_spr || sprite_index==walk_cub_forward_spr
{
facedirection=90
}
if sprite_index==walk_backward_spr || sprite_index==walk_cub_backward_spr
{
facedirection=270
}
if sprite_index==walk_right_spr || sprite_index==walk_cub_right_spr
{
facedirection=0
}
if sprite_index==walk_left_spr || sprite_index==walk_cub_left_spr
{
facedirection=180
}
//isometric depth
depth=-y
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///room set
if room==rm_forest_hub
{
    roomin="hub"
}

if room==rm_forest_bear_00
{
    roomin="00"
}

if room==rm_forest_bear_01
{
    roomin="01"
}

if room==rm_forest_bear_02
{
    roomin="02"
}

if room==rm_bear_cave
{
    roomin="bear cave"
}

//slopey area
if room==rm_slopey_1
{
    roomin="slopey1"
}

if room==rm_slopey_2
{
    roomin="slopey2"
}

if room==rm_slopey_3
{
    roomin="slopey3"
}

if room==rm_slopey_preparation
{
    roomin="slopeyprep"
}

if room==family_room
{
    roomin="hub"
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement 2.0

//Magma slowdown
if maggma==true &amp;&amp; hooked==false
{
    hspeed= (walkspeed*0.5) * (keyboard_check(ord("D")) - keyboard_check(ord("A")))
    vspeed= (walkspeed*0.5) * (keyboard_check(ord("S")) - keyboard_check(ord("W")))
}
else if maggma==false &amp;&amp; hooked==false
//Speed Setting
{
    hspeed= walkspeed * (keyboard_check(ord("D")) - keyboard_check(ord("A")))
    vspeed= walkspeed * (keyboard_check(ord("S")) - keyboard_check(ord("W")))
}
if snared==true
{
vspeed=0
hspeed=0
}
//Collisions
if hspeed!=0 and !place_free(x+hspeed,y) &amp;&amp; hooked=false
{
    if hspeed&gt;0 move_contact_solid(0,hspeed)
    if hspeed&lt;0 move_contact_solid(180,-hspeed)
    hspeed=0
}

if vspeed!=0 and !place_free(x,y+vspeed) &amp;&amp; hooked=false
{
    if vspeed&gt;0 move_contact_solid(270,vspeed)
    if vspeed&lt;0 move_contact_solid(90,-vspeed)
    vspeed=0
}

//Footprints

//Sideways
if (keyboard_check(left_key) || keyboard_check(right_key)) &amp;&amp; hspeed!=0
{
    if alarm[7]==-1
    {
        alarm[7]=10
    }
}

//Vertical
if (keyboard_check(up_key) || keyboard_check(down_key)) &amp;&amp; vspeed!=0
{
    if alarm[6]==-1
    {
        alarm[6]=10
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sprite setting

//Moving left
if keyboard_check(left_key)
{
        if maggma==true &amp;&amp; cub==false
            {
            sprite_index=normal_magma_left
            }
        if maggma==false &amp;&amp; cub==false
            {
            sprite_index=walk_left_spr
            }
        if maggma==false &amp;&amp; cub==true
            {
            sprite_index= walk_cub_left_spr
            }
        if maggma==true &amp;&amp; cub==true
            {
            sprite_index= cub_left_magma
            }
            
    image_speed=1
}

//Moving right
if keyboard_check(right_key)
{
        if maggma==true &amp;&amp; cub==false
            {
            sprite_index=normal_magma_right
            }
        if maggma==false &amp;&amp; cub==false
            {
            sprite_index=walk_right_spr
            }
        if maggma==false &amp;&amp; cub==true
            {
            sprite_index= walk_cub_right_spr
            }
        if maggma==true &amp;&amp; cub==true
            {
            sprite_index= cub_right_magma
            }
    image_speed=1
}

//Moving down
if keyboard_check(down_key)
{
        if maggma==true &amp;&amp; cub==false
            {
            sprite_index=normal_magma_down
            }
        if maggma==false &amp;&amp; cub==false
            {
            sprite_index=walk_forward_spr
            }
        if maggma==false &amp;&amp; cub==true
            {
            sprite_index= walk_cub_forward_spr
            }
        if maggma==true &amp;&amp; cub==true
            {
            sprite_index= cub_down_magma
            }
    image_speed=1
}

//Moving up
if keyboard_check(up_key)
{
        if maggma==true &amp;&amp; cub==false
            {
            sprite_index=normal_magma_up
            }
        if maggma==false &amp;&amp; cub==false
            {
            sprite_index=walk_backward_spr
            }
        if maggma==false &amp;&amp; cub==true
            {
            sprite_index= walk_cub_backward_spr
            }
        if maggma==true &amp;&amp; cub==true
            {
            sprite_index= cub_up_magma
            }
    image_speed=1
}

//Idle
if !(keyboard_check(right_key)) &amp;&amp; !(keyboard_check(left_key)) &amp;&amp; !(keyboard_check(down_key)) &amp;&amp; !(keyboard_check(up_key))
{
    image_speed=0
    image_index=0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="lock">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if bbox_bottom&lt;other.bbox_top
{
vspeed=0
}
if bbox_top&gt;other.bbox_bottom
{
vspeed=0
}
if bbox_right&lt;other.bbox_left
{
hspeed=0
}
if bbox_left&gt;other.bbox_right
{
hspeed=0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="hooky">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hooked=false
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>whip</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="b1_barrier">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if bbox_bottom&lt;other.bbox_top
{
vspeed=0
}
if bbox_top&gt;other.bbox_bottom
{
vspeed=0
}
if bbox_right&lt;other.bbox_left
{
hspeed=0
}
if bbox_left&gt;other.bbox_right
{
hspeed=0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="b2_barrier">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if bbox_bottom&lt;other.bbox_top
{
vspeed=0
}
if bbox_top&gt;other.bbox_bottom
{
vspeed=0
}
if bbox_right&lt;other.bbox_left
{
hspeed=0
}
if bbox_left&gt;other.bbox_right
{
hspeed=0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="collision">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if bbox_bottom&lt;other.bbox_top 
{
vspeed=0
}
if bbox_top&gt;other.bbox_bottom 
{
vspeed=0
}
if bbox_right&lt;other.bbox_left 
{
hspeed=0
}
if bbox_left&gt;other.bbox_right 
{
hspeed=0
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="bear_cub">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>cub=true
picked=true
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>sfx_item</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="monster">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if maggma == true
{
blaze-=0.01
}
else
{
blaze-=0.1
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if canplay == true
{
audio_play_sound(sfx_dmg,10,false)
canplay = false
alarm[1]=70
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(1)
draw_self()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>201</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_create_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>torch</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>blaze-=1
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>13,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
