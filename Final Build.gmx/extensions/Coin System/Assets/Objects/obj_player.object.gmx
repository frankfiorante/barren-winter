<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variable List

//These are movement Variables
hsp = 0; 
vsp = 0; 
movespeed = 5; 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movement

if keyboard_check(vk_left) // This checks to see if you pushed the Left Arrow
{
    hsp = -movespeed;       // This hsp to a negative movespeed so it can move left
}

if keyboard_check(vk_right) // This checks to see if you pushed the Right Arrow
{
    hsp = movespeed;       // This hsp to a positive movespeed so it can move right
}

if keyboard_check(vk_up) // This checks to see if you pushed the Up Arrow
{
    vsp = -movespeed;       // This vsp to a negative movespeed so it can move up
}

if keyboard_check(vk_down) // This checks to see if you pushed the Down Arrow
{
    vsp = movespeed;       // This vsp to a positive movespeed so it can move down
}

if keyboard_check_released(vk_left) || keyboard_check_released(vk_right) // This checks to so if you released the Left or Right key and stops
{
    hsp = 0; 
}

if keyboard_check_released(vk_up) || keyboard_check_released(vk_down) // This checks to so if you released the Up or Down key and stops
{
    vsp = 0;
}

x += hsp; // This makes you move on the X Axis 
y += vsp; // This makes you move on the Y Axis 
// Make sure you add the plus sign or it won't work


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collecting coins

if place_meeting(x,y, obj_coin) //If in collision with Coin then
{
    coin += 1; // Add one coin
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
